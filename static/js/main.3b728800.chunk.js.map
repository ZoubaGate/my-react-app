{"version":3,"sources":["dos/formInput.js","App.js","reportWebVitals.js","index.js"],"names":["FormInput","state","nom","ville","age","item","onChange","event","setState","target","name","value","onSubmi","preventDefault","renderCard","map","dit","index","className","onSubmit","this","class","htmlFor","type","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQACqBA,E,4MAEjBC,MAAQ,CACEC,IAAI,GACJC,MAAM,GACNC,IAAI,GACLC,KAAK,I,EAEdC,SAAW,SAACC,GACA,EAAKC,SAAL,eACKD,EAAME,OAAOC,KAAQH,EAAME,OAAOE,S,EAGvDC,QAAU,SAACL,GACKA,EAAMM,iBACN,EAAKL,SAAS,CACNN,IAAI,GACJE,IAAI,GACJD,MAAM,GACNE,KAAI,sBAAO,EAAKJ,MAAMI,MAAlB,CAAuB,CAACH,IAAK,EAAKD,MAAMC,IAAKE,IAAK,EAAKH,MAAMG,IAAKD,MAAO,EAAKF,MAAME,Y,EAG5GW,WAAY,WACJ,OAAO,EAAKb,MAAMI,KAAKU,KAAI,SAACC,EAAIC,GACxB,OACA,qBAAiBC,UAAU,YAA3B,SACI,sBAAKA,UAAU,YAAf,UACM,6BAAKF,EAAId,MACT,uBACA,4CAAec,EAAIZ,IAAnB,WACA,8CAAiBY,EAAIb,MAArB,WALAc,O,4CAY1B,WACI,OACG,eAAC,WAAD,WACQ,sBAAKC,UAAU,YAAf,UACG,qBAAKA,UAAU,cAAf,uCACA,qBAAKA,UAAU,YAAf,SAEE,uBAAMC,SAAUC,KAAKR,QAArB,UACI,sBAAKS,MAAM,aAAX,UACI,uBAAOC,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOjB,SAAUc,KAAKd,SAC9BY,UAAU,+BACVR,KAAK,WAGd,sBAAKW,MAAM,aAAX,UACI,uBAAOC,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOjB,SAAUc,KAAKd,SAC9BY,UAAU,+BACVR,KAAK,WAGb,sBAAKW,MAAM,aAAX,UACI,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOjB,SAAUc,KAAKd,SAC9BY,UAAU,+BACVR,KAAK,aAGZ,kEAINU,KAAKN,oB,GAtEYU,aCexBC,G,wKAVf,WACI,OACF,qBAAKP,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJcM,cCOHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b728800.chunk.js","sourcesContent":["import React, { Component,Fragment } from 'react'\r\nexport default class FormInput extends Component {\r\n\r\n    state = {\r\n              nom:'',\r\n              ville:'',\r\n              age:'',\r\n             item:[]\r\n        }\r\n    onChange = (event) => {\r\n                this.setState({\r\n                    [event.target.name] : event.target.value\r\n                        });\r\n}\r\nonSubmi = (event) => {\r\n                event.preventDefault();\r\n                this.setState({\r\n                        nom:'',\r\n                        age:'',\r\n                        ville:'',\r\n                        item : [...this.state.item,{nom: this.state.nom, age: this.state.age, ville: this.state.ville}]\r\n});\r\n        }\r\n    renderCard =()=>{\r\n            return this.state.item.map((dit,index) => {\r\n                    return( \r\n                    <div key={index} className=\"card mb-3\">\r\n                        <div className=\"card-body\">\r\n                              <h1>{dit.nom}</h1>\r\n                              <hr></hr>\r\n                              <p>vous aviez {dit.age} ans.</p>\r\n                              <p>vous habitez {dit.ville}.</p>\r\n                        </div>\r\n                   </div> \r\n                    )\r\n                    })\r\n\r\n}\r\n    render() {\r\n        return (\r\n           <Fragment>\r\n                   <div className=\"card my-3\">\r\n                      <div className=\"card-header\">Register pour la presence</div>\r\n                      <div className=\"card-body\">\r\n\r\n                        <form onSubmit={this.onSubmi}>\r\n                            <div class=\"form-group\">\r\n                                <label htmlFor=\"nom\">Nom</label>\r\n                                <input type=\"text\" onChange={this.onChange} \r\n                                    className=\"form-control form-control-lg\"\r\n                                    name=\"nom\"\r\n                                ></input>\r\n                            </div>\r\n                           <div class=\"form-group\">\r\n                               <label htmlFor=\"age\">Age</label>\r\n                               <input type=\"text\" onChange={this.onChange} \r\n                                   className=\"form-control form-control-lg\"\r\n                                   name=\"age\"\r\n                               ></input>\r\n                           </div>\r\n                           <div class=\"form-group\">\r\n                               <label htmlFor=\"ville\">Ville</label>\r\n                               <input type=\"text\" onChange={this.onChange} \r\n                                   className=\"form-control form-control-lg\"\r\n                                   name=\"ville\"\r\n                               ></input>\r\n                           </div>\r\n                            <button>cliquer pour ajouter</button>                      \r\n                        </form>\r\n                     </div>\r\n                    </div>\r\n                     {this.renderCard()} \r\n            </Fragment>\r\n           \r\n           \r\n        )\r\n    }\r\n}\r\n","import FormInput from './dos/formInput'\nimport React, { Component } from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends Component {\nrender(){\n    return (\n  <div className=\"App\">\n    <FormInput />\n  </div>\n);\n}\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}